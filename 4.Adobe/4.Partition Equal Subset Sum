class Solution{
public:

   int helper(int i, int arr[], int sum, vector<vector<int>> &dp){
       if(sum==0) return 1;
       if(i==-1){
           return 0;
           } 
       
       if(dp[i][sum]!= -1) {
           return dp[i][sum];
           
       }
       
       if(arr[i]>sum){return dp[i][sum] =  helper(i-1,arr,sum,dp);
       }
       
      else {
          return dp[i][sum] = helper(i-1,arr,sum,dp) 
      || helper(i-1,arr,sum-arr[i],dp);}
   }


    int equalPartition(int N, int arr[])
    {
        // code here
        int total =0;
        for(int i=0;i<N;i++){
            total+=arr[i];
        }
        
        if(total%2 !=0) return 0;
       vector<vector<int>> dp(N+1, vector<int>((total/2)+1,-1));
       
        return helper(N,arr,total/2,dp);
    }
};
