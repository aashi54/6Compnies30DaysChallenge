int dx[] = {0,0,-1,1};
    int dy[] = {-1,1,0,0};
class Solution {
public:
    int n,m;
    void dfs(int x,int y, vector<vector<int>> &grid, vector<vector<int>> &vis,int &cnt){
        vis[x][y] =1;
        cnt++;
        
        for(int i=0;i<4;i++){
            int tx = x+dx[i];
            int ty = y+dy[i];
            
            if(tx>=0 && tx<n && ty>=0 && ty<m && !vis[tx][ty] && grid[tx][ty]==1){
                dfs(tx,ty,grid,vis,cnt);
            }
        }
    }
    
    
    int maxAreaOfIsland(vector<vector<int>>& grid) {
       n= grid.size();
     m = grid[0].size();
        int ans=0;
        int cnt;
        vector<vector<int>> vis(n,vector<int> (m,0));
        
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(!vis[i][j] && grid[i][j]==1){
                    cnt =0;
                    dfs(i,j,grid,vis,cnt);
                    ans = max(ans,cnt);
                }
            }
        }
        
        return ans;
    }
};
